// Do not edit this file; automatically generated by build.py.
'use strict';

/*

 Visual Blocks Editor

 Copyright 2012 Fred Lin.
 https://github.com/gasolin/BlocklyDuino

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

Blockly.Blocks['bc_nb_init'] = {
  init: function() {
    this.setColour(230);
    this.appendDummyInput()
        .appendField("NB模块初始化")
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
  }
};

Blockly.Blocks['bc_nb_addobj'] = {
  init: function() {
    this.appendValueInput("bc_nb_addobj_id")
        .setCheck(null)
        .setAlign(Blockly.ALIGN_CENTRE)
        .appendField("NB模块添加对象   对象ID");
    this.appendValueInput("bc_nb_addobj_num")
        .setCheck(null)
        .setAlign(Blockly.ALIGN_CENTRE)
        .appendField("属性数");
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['bc_nb_register'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("NB模块连接OnetNet平台")
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['bc_nb_addattr'] = {
  init: function() {
    this.appendValueInput("bc_nb_addattr_len")
        .setCheck(null)
        .setAlign(Blockly.ALIGN_CENTRE)
        .appendField("NB模块设置对象属性    属性长度");
    this.appendValueInput("bc_nb_addattr_attr")
        .setCheck(null)
        .setAlign(Blockly.ALIGN_CENTRE)
        .appendField("属性");
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['bc_nb_read'] = {
  init: function() {
    this.appendValueInput("bc_nb_read_type")
        .setCheck(null)
        .appendField("OneNet平台读取数据  类型");
        this.appendValueInput("bc_nb_read_len")
        .setCheck(null)
        .appendField("类型长度");
    this.appendValueInput("bc_nb_read_data")
        .setCheck(null)
        .appendField("读取数据");
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['bc_nb_write'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("OneNet平台下发数据");
    this.setInputsInline(true);
    this.setOutput(true, null);
    this.setColour(230);
    
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['bc_nb_notify'] = {
  init: function() {
    this.appendValueInput("bc_nb_notify_obj")
        .setCheck(null)
        .appendField("NB模块上传数据   对象ID");
    this.appendValueInput("bc_nb_notify_attr")
        .setCheck(null)
        .appendField("属性ID");
    this.appendValueInput("bc_nb_notify_value")
        .setCheck(null)
        .appendField("值");
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['bc_nb_del'] = {
  init: function() {
    this.setColour(230);
    this.appendDummyInput()
        .appendField("NB模块断开连接")
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
  }
};
//---------------------------
