// Do not edit this file; automatically generated by build.py.
'use strict';


Blockly.Arduino.bc_nb_init = function() {
    Blockly.Arduino.setups_['setup_bc_nb_init_'] =  "Serial2.begin(9600);\n"+
    "Serial1.begin(9600);\n"+
    "String Byte1;\n"+
    'Serial2.println("AT+MIPLCREATE\\r\\n");\n'+
    'delay(100);\n'+
    'if (Serial2.available()>0) {\n'+
    'Byte1 = Serial2.readString();\n'+
    'delay(50);\n'+
    'Serial1.print(Byte1);//ok\n'+
    'delay(50);\n'+
    'if(Byte1.indexOf("OK") == -1) {Serial1.println("NB_INIT_ERROR : Create Instance Failed !");return ;}Byte1 = "";}\n';
    var code = '';
    return code;
  };

  Blockly.Arduino.bc_nb_addobj = function(block) {
    var value_bc_nb_addobj_id = Blockly.Arduino.valueToCode(block, 'bc_nb_addobj_id', Blockly.Arduino.ORDER_ATOMIC);
    var value_bc_nb_addobj_num = Blockly.Arduino.valueToCode(block, 'bc_nb_addobj_num', Blockly.Arduino.ORDER_ATOMIC);
    // TODO: Assemble JavaScript into code variable.
    Blockly.Arduino.setups_['setup_bc_nb_addobj_'] =  'Serial2.println("AT+MIPLADDOBJ=0,'+value_bc_nb_addobj_id+',1,\\"1\\",'+value_bc_nb_addobj_num+',0\\r\\n");\n'+
    'delay(100);\n'+
    'if (Serial2.available()>0) {\n'+
    '  Byte1 = Serial2.readString();\n'+
    '  delay(50);\n'+
    '  Serial1.print(Byte1);//ok\n'+
    '  delay(50);\n'+
    '  if(Byte1.indexOf("OK") == -1) {Serial1.println("NB_INIT_ERROR : Add Object Failed !");return ;}Byte1 = "";\n'+
    '}';
    var code = '';
    return code;
  };

  Blockly.Arduino.bc_nb_register = function(block) {
    //var value_bc_nb_register_observe = Blockly.JavaScript.valueToCode(block, 'bc_nb_register_observe', Blockly.Arduino.ORDER_ATOMIC);
    //var value_bc_nb_register_discover = Blockly.JavaScript.valueToCode(block, 'bc_nb_register_discover', Blockly.Arduino.ORDER_ATOMIC);
    // TODO: Assemble JavaScript into code variable.
    Blockly.Arduino.setups_['setup_bc_nb_register_'] =  'String observeCode;\n'+
    'String discoverCode;\n'+
    'Serial2.println("AT+MIPLOPEN=0,270,120\\r\\n");\n'+
    'delay(2000);\n'+
    'if (Serial2.available()>0) {\n'+
      'Byte1 = Serial2.readString();\n'+
      'delay(50);\n'+
      'Serial1.print(Byte1);\n'+
      'delay(50);\n'+
      'if(Byte1.indexOf("OK") == -1) {Serial1.println("NB_INIT_ERROR : Send Register Request  Failed !");return ;}\n'+
      'int n = Byte1.indexOf("+MIPLOBSERVE: ");\n'+
      'observeCode = Byte1.substring(n+16,n+25);\n'+
      'n = observeCode.indexOf(",");\n'+
      'observeCode = observeCode.substring(0,n);\n'+
      'Serial1.println(observeCode);\n'+
  
      'n = Byte1.indexOf("+MIPLDISCOVER:");\n'+
      'discoverCode = Byte1.substring(n+17,n+25);\n'+
      'n = discoverCode.indexOf(",");\n'+
      'discoverCode = discoverCode.substring(0,n);\n'+
      'Serial1.println(discoverCode);\n'+
  
      'Byte1 = "";\n'+
      
    '}\n'+
  'Serial2.print("AT+MIPLCLOSE=0\\r\\n");\n'+
  'Serial2.print("AT+MIPLDELETE=0\\r\\n");';
    var code = '';
    // TODO: Change ORDER_NONE to the correct strength.
    return code;
  };

//------------------------------------
  